// lib/modules/proposals/proposal_form_message_ai.dart
import 'package:flutter/material.dart';
import 'dart:convert'; // <<<<< Bu satÄ±rÄ± ekledik
import '../../utils/constants.dart';
import '../proposals/gemini_service.dart';
import '../../models/proposal.dart';

class ProposalFromMessagePage extends StatefulWidget {
  const ProposalFromMessagePage({super.key});

  @override
  State<ProposalFromMessagePage> createState() =>
      _ProposalFromMessagePageState();
}

class _ProposalFromMessagePageState extends State<ProposalFromMessagePage> {
  final TextEditingController _messageController = TextEditingController();
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _customerNameController = TextEditingController();
  final TextEditingController _amountController = TextEditingController();
  final TextEditingController _requestController = TextEditingController();
  final TextEditingController _descriptionController = TextEditingController();
  // ðŸ‘‡ Yeni eklendi: AI'dan gelen ham JSON yanÄ±tÄ±nÄ± gÃ¶stermek iÃ§in
  final TextEditingController _rawAiResponseController =
      TextEditingController();

  bool _loadingAI = false;

  @override
  void dispose() {
    _messageController.dispose();
    _titleController.dispose();
    _customerNameController.dispose();
    _amountController.dispose();
    _requestController.dispose();
    _descriptionController.dispose();
    // ðŸ‘‡ Yeni eklendi: Controller'Ä± temizle
    _rawAiResponseController.dispose();
    super.dispose();
  }

  Future<void> _generateProposalFields() async {
    if (_messageController.text.trim().isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('LÃ¼tfen bir mÃ¼ÅŸteri mesajÄ± girin!')),
      );
      return;
    }

    setState(() {
      _loadingAI = true;
      _rawAiResponseController.clear(); // Yeni bir istekte eski yanÄ±tÄ± temizle
    });
    try {
      // GeminiService'den gelen ham yanÄ±tÄ± almak iÃ§in GeminiService iÃ§inde kÃ¼Ã§Ã¼k bir deÄŸiÅŸiklik yapabiliriz
      // veya burada yanÄ±tÄ±n hem parsed hem de raw halini yakalayabiliriz.
      // Åžimdilik GeminiService'in doÄŸrudan parse edilmiÅŸ Map'i dÃ¶ndÃ¼rdÃ¼ÄŸÃ¼nÃ¼ varsayarak devam edelim
      // ve ham yanÄ±tÄ± burada tekrar yapÄ±landÄ±ralÄ±m veya GeminiService'i gÃ¼ncelleyelim.
      // En basit yol iÃ§in, GeminiService'den gelen yanÄ±tÄ±n orijinal halini burada yakalayalÄ±m:
      final rawResult = await GeminiService.analyzeMessageAndGenerateProposal(
        message: _messageController.text,
      );

      setState(() {
        _customerNameController.text = rawResult["customer"] ?? '';
        _requestController.text = rawResult["request"] ?? '';
        _descriptionController.text = rawResult["description"] ?? '';
        _titleController.text = "Yeni Teklif - ${_customerNameController.text}";
        _amountController.text = "0.00";
        // ðŸ‘‡ Yeni eklendi: Ham yanÄ±tÄ± bir string olarak burada gÃ¶sterelim
        // result Map'inden yeniden JSON string'i oluÅŸturarak basitÃ§e gÃ¶sterebiliriz.
        _rawAiResponseController.text = jsonEncode(rawResult);
      });
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text("AI AlanlarÄ± Doldurma BaÅŸarÄ±sÄ±z: $e"),
          backgroundColor: AppColors.error,
        ),
      );
      // ðŸ‘‡ Yeni eklendi: Hata durumunda da hatayÄ± ham yanÄ±t alanÄ±nda gÃ¶sterebiliriz
      _rawAiResponseController.text = "Hata oluÅŸtu: $e";
    } finally {
      setState(() => _loadingAI = false);
    }
  }

  void _saveProposal() {
    if (_titleController.text.trim().isEmpty ||
        _customerNameController.text.trim().isEmpty ||
        _amountController.text.trim().isEmpty ||
        _requestController.text.trim().isEmpty ||
        _descriptionController.text.trim().isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('LÃ¼tfen tÃ¼m zorunlu alanlarÄ± doldurun.')),
      );
      return;
    }

    final newProposal = Proposal(
      title: _titleController.text.trim(),
      customerName: _customerNameController.text.trim(),
      amount:
          double.tryParse(_amountController.text.replaceAll(',', '.')) ?? 0.0,
      request: _requestController.text.trim(),
      description: _descriptionController.text.trim(),
      date: DateTime.now(),
      status: ProposalStatus.pending,
    );

    Navigator.pop(context, newProposal);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      appBar: AppBar(
        title: Text(
          'Mesajdan Teklif OluÅŸtur',
          style: AppTextStyles.headlineSmall.copyWith(
            color: AppColors.yellowAccent,
          ),
        ),
        backgroundColor: AppColors.background,
        iconTheme: const IconThemeData(color: AppColors.yellowAccent),
        actions: [
          IconButton(
            icon: const Icon(Icons.save, color: AppColors.yellowAccent),
            onPressed: _saveProposal,
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(AppConstants.padding),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'MÃ¼ÅŸteri mesajÄ±nÄ± buraya yapÄ±ÅŸtÄ±rÄ±n:',
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
            ),
            const SizedBox(height: AppConstants.padding / 2),
            TextField(
              controller: _messageController,
              decoration: InputDecoration(
                hintText:
                    'Ã–rn: "Merhaba, elektrik tesisatÄ± iÃ§in teklif alabilir miyiz?"',
                hintStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(
                    AppConstants.borderRadius,
                  ),
                  borderSide: BorderSide.none,
                ),
                filled: true,
                fillColor: AppColors.surface,
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
              minLines: 3,
              maxLines: 6,
            ),
            const SizedBox(height: AppConstants.padding),
            ElevatedButton(
              onPressed: _loadingAI ? null : _generateProposalFields,
              style: ElevatedButton.styleFrom(
                backgroundColor: AppColors.yellowAccent,
                padding: const EdgeInsets.symmetric(
                  horizontal: 20,
                  vertical: 12,
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(
                    AppConstants.borderRadius,
                  ),
                ),
              ),
              child: _loadingAI
                  ? const CircularProgressIndicator(color: AppColors.primary)
                  : Text(
                      'AI ile AlanlarÄ± Doldur',
                      style: AppTextStyles.button.copyWith(
                        color: AppColors.primary,
                      ),
                    ),
            ),
            // ðŸ‘‡ Yeni eklendi: Ham AI yanÄ±tÄ±nÄ± gÃ¶sterecek alan
            const SizedBox(height: AppConstants.padding),
            Text(
              'AI Ham YanÄ±tÄ± (JSON):',
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
            ),
            const SizedBox(height: AppConstants.padding / 2),
            TextField(
              controller: _rawAiResponseController,
              readOnly: true, // Sadece okunabilir
              minLines: 3,
              maxLines: 8,
              style: AppTextStyles.bodySmall.copyWith(
                color: AppColors.textPrimary,
              ),
              decoration: InputDecoration(
                hintText: 'AI yanÄ±tÄ± burada gÃ¶rÃ¼necek...',
                hintStyle: AppTextStyles.bodySmall.copyWith(
                  color: AppColors.textSecondary,
                ),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(
                    AppConstants.borderRadius,
                  ),
                  borderSide: BorderSide.none,
                ),
                filled: true,
                fillColor: AppColors.surface,
              ),
            ),

            // ðŸ‘† Yeni eklenen kÄ±sÄ±m burada bitiyor
            const Divider(
              color: AppColors.divider,
              height: AppConstants.padding * 2,
            ),
            Text(
              'Teklif DetaylarÄ±:',
              style: AppTextStyles.titleLarge.copyWith(
                color: AppColors.yellowAccent,
              ),
            ),
            const SizedBox(height: AppConstants.padding),
            TextFormField(
              controller: _titleController,
              decoration: InputDecoration(
                labelText: 'Teklif BaÅŸlÄ±ÄŸÄ±*',
                labelStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
            ),
            const SizedBox(height: AppConstants.padding),
            TextFormField(
              controller: _customerNameController,
              decoration: InputDecoration(
                labelText: 'MÃ¼ÅŸteri AdÄ±*',
                labelStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
            ),
            const SizedBox(height: AppConstants.padding),
            TextFormField(
              controller: _amountController,
              decoration: InputDecoration(
                labelText: 'Tutar (â‚º)*',
                labelStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
              keyboardType: TextInputType.number,
            ),
            const SizedBox(height: AppConstants.padding),
            TextFormField(
              controller: _requestController,
              decoration: InputDecoration(
                labelText: 'MÃ¼ÅŸteri Ä°steÄŸi Ã–zeti*',
                labelStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
              minLines: 1,
              maxLines: 3,
            ),
            const SizedBox(height: AppConstants.padding),
            TextFormField(
              controller: _descriptionController,
              decoration: InputDecoration(
                labelText: 'Teklif AÃ§Ä±klamasÄ±*',
                labelStyle: AppTextStyles.bodyMedium.copyWith(
                  color: AppColors.textSecondary,
                ),
              ),
              style: AppTextStyles.bodyMedium.copyWith(
                color: AppColors.textPrimary,
              ),
              minLines: 5,
              maxLines: 10,
            ),
            const SizedBox(height: AppConstants.padding * 2),
            Center(
              child: ElevatedButton(
                onPressed: _saveProposal,
                style: ElevatedButton.styleFrom(
                  backgroundColor: AppColors.accent,
                  padding: const EdgeInsets.symmetric(
                    horizontal: 40,
                    vertical: 15,
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(
                      AppConstants.borderRadius,
                    ),
                  ),
                ),
                child: Text(
                  'Teklifi Kaydet',
                  style: AppTextStyles.button.copyWith(color: AppColors.white),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
